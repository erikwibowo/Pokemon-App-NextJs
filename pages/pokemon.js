import Head from 'next/head'
import Layouts from '../components/layouts'
import Link from 'next/link'

export default function Pokemon({ pokemon }) {
    return (
        <>
            <Head>
                <title>{pokemon.name.toUpperCase()} - Pokemon App</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layouts>
                <div className='space-y-4'>
                    <div className='flex items-center justify-between py-8'>
                        <Link className='px-4 py-2 rounded-lg bg-amber-300' href={'/'} >Back</Link>
                        <h1 className='text-center text-4xl font-bold uppercase'>{pokemon.name}</h1>
                        <div></div>
                    </div>
                    <div className='w-full bg-white shadow rounded-lg'>
                        <div className='px-8 py-4 flex flex-col space-y-4 items-center justify-start'>
                            <img className='w-96 h-auto' src={'https://assets.pokemon.com/assets/cms2/img/pokedex/full/' + ("00" + (pokemon.id)).slice(-3) + '.png'} />
                            <div className='mx-4 my-2 w-full space-y-2'>
                                <div className='flex items-center justify-between border-b border-gray-200'>
                                    <p className='text-lg font-bold'>Species</p>
                                    <p>{pokemon.species.name}</p>
                                </div>
                            </div>
                            <div className='mx-4 my-2 w-full space-y-2'>
                                <p className='border-b text-lg border-gray-200 font-bold'>Types</p>
                                {pokemon.types.map((type, index) => (
                                    <p className='capitalize' key={index}>{type.type.name}</p>
                                ))}
                            </div>
                            <div className='mx-4 my-2 w-full space-y-2'>
                                <p className='border-b text-lg border-gray-200 font-bold'>Abilities</p>
                                {pokemon.abilities.map((ability, index) => (
                                    <p className='capitalize' key={index}>{ability.ability.name}</p>
                                ))}
                            </div>
                            <div className='mx-4 my-2 w-full space-y-2'>
                                <p className='border-b text-lg border-gray-200 font-bold'>Stats</p>
                                {pokemon.stats.map((stat, index) => (
                                    <div key={index} className='flex items-center justify-between'>
                                        <p className='capitalize'>{stat.stat.name}</p>
                                        <p>{stat.base_stat}</p>
                                    </div>
                                ))}
                            </div>
                            <div className='mx-4 my-2 w-full space-y-2'>
                                <p className='border-b text-lg border-gray-200 font-bold'>Game Indices</p>
                                {pokemon.game_indices.map((ver, index) => (
                                    <div key={index} className='flex items-center justify-between'>
                                        <p className='capitalize'>{ver.version.name}</p>
                                        <p>{ver.game_index}</p>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>
                </div>
            </Layouts>
        </>
    )
}
export async function getServerSideProps({ query }) {
    const id = query.id
    try {
        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)
        const pokemon = await res.json()
        return {
            props: {
                pokemon,
            },
        }
    } catch (error) {
        console.log(error)
    }
    return {
        notFound: true
    }
}